{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\my-react-app\\\\src\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport './List.css';\nimport UserContext from './UserContext';\nimport useGoalTimer from './hooks/useGoalTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  listTitle = \"My List\",\n  placeholderText = \"Put top goals here\",\n  buttonLabel = \"Add\",\n  Listdescriptin = \"This is my list of goals.\",\n  clearButtonLabel = \"Clear List\",\n  emptyInputAlert = \"Textbox cannot be empty!\",\n  emptyListAlert = \"There are no items to clear!\"\n}) => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [selectedGoal, setSelectedGoal] = useState(null);\n  const listInput = useRef(null);\n  const timerInput = useRef(null);\n  const listRef = useRef(null);\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  const {\n    goals\n  } = userData;\n  const {\n    time,\n    isRunning,\n    startTimer,\n    pauseTimer,\n    resetTimer\n  } = useGoalTimer();\n  useEffect(() => {\n    console.log(\"ðŸŸ¡ List updated:\", items);\n    if (listRef.current) {\n      listRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [items]);\n  const handleAdd = () => {\n    const value = listInput.current.value.trim();\n    if (!value) {\n      alert(emptyInputAlert);\n      return;\n    }\n    setItems([...items, {\n      text: value,\n      completed: false\n    }]);\n    setUserData(prev => ({\n      about: {\n        headerTitle: prev.about.headerTitle,\n        name: prev.about.name,\n        photo: {\n          me: prev.about.photo.me,\n          width: prev.about.photo.width\n        },\n        description: prev.about.description\n      },\n      education: {\n        headerTitle: prev.education.headerTitle,\n        description: prev.education.description\n      },\n      hobbies: {\n        headerTitle: prev.hobbies.headerTitle,\n        description: prev.hobbies.description\n      },\n      goals: {\n        headerTitle: prev.goals.headerTitle,\n        description: prev.goals.description,\n        suggestedEntry: prev.goals.suggestedEntry,\n        buttonLabel: prev.goals.buttonLabel,\n        totalGoalsAdded: prev.goals.totalGoalsAdded + 1 // <-- only change here\n      }\n    }));\n\n    listInput.current.value = '';\n    listInput.current.focus();\n  };\n  const handleClear = () => {\n    if (items.length === 0) {\n      alert(emptyListAlert);\n      return;\n    }\n    setItems([]);\n    listInput.current.value = '';\n    listInput.current.focus();\n  };\n  const handleStartTimer = () => {\n    const duration = parseInt(timerInput.current.value);\n    if (isNaN(duration) || duration <= 0) {\n      alert(\"Please enter a valid time in minutes\");\n      return;\n    }\n    startTimer(duration * 60);\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const toggleComplete = index => {\n    const newItems = [...items];\n    newItems[index].completed = !newItems[index].completed;\n    setItems(newItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: listTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: listInput,\n      placeholder: placeholderText,\n      className: \"inputData\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      className: \"AddButton\",\n      children: buttonLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      className: \"removeBotton\",\n      children: clearButtonLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: Listdescriptin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Goal Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ref: timerInput,\n        placeholder: \"Enter minutes\",\n        min: \"1\",\n        className: \"inputData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-controls\",\n        children: [!isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartTimer,\n          children: \"Start Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 1\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pauseTimer,\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTimer,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: listRef,\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: item.completed ? 'completed' : '',\n        onClick: () => toggleComplete(i),\n        children: item.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 1\n  }, this);\n};\n_s(List, \"e0BmWfIK7uIm1sJmU76Y1sueOxM=\", false, function () {\n  return [useGoalTimer];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","UserContext","useGoalTimer","jsxDEV","_jsxDEV","List","listTitle","placeholderText","buttonLabel","Listdescriptin","clearButtonLabel","emptyInputAlert","emptyListAlert","_s","items","setItems","selectedGoal","setSelectedGoal","listInput","timerInput","listRef","userData","setUserData","goals","time","isRunning","startTimer","pauseTimer","resetTimer","console","log","current","scrollIntoView","behavior","handleAdd","value","trim","alert","text","completed","prev","about","headerTitle","name","photo","me","width","description","education","hobbies","suggestedEntry","totalGoalsAdded","focus","handleClear","length","handleStartTimer","duration","parseInt","isNaN","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","toggleComplete","index","newItems","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","placeholder","className","onClick","min","map","item","i","_c","$RefreshReg$"],"sources":["C:/react/my-react-app/src/List.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\nimport './List.css';\nimport UserContext from './UserContext';\nimport useGoalTimer from './hooks/useGoalTimer';\n\nconst List = ({\nlistTitle = \"My List\",\nplaceholderText = \"Put top goals here\",\nbuttonLabel = \"Add\",\nListdescriptin = \"This is my list of goals.\",\nclearButtonLabel = \"Clear List\",\nemptyInputAlert = \"Textbox cannot be empty!\",\nemptyListAlert = \"There are no items to clear!\",\n}) => {\nconst [items, setItems] = useState([]);\nconst [selectedGoal, setSelectedGoal] = useState(null);\nconst listInput = useRef(null);\nconst timerInput = useRef(null);\nconst listRef = useRef(null);\nconst { userData, setUserData } = useContext(UserContext);\nconst { goals } = userData;\nconst { time, isRunning, startTimer, pauseTimer, resetTimer } = useGoalTimer();\n\nuseEffect(() => {\nconsole.log(\"ðŸŸ¡ List updated:\", items);\n\nif (listRef.current) {\nlistRef.current.scrollIntoView({ behavior: 'smooth' });\n}\n}, [items]);\n\nconst handleAdd = () => {\nconst value = listInput.current.value.trim();\nif (!value) {\nalert(emptyInputAlert);\nreturn;\n}\nsetItems([...items, { text: value, completed: false }]);\nsetUserData(prev => ({\n    about: {\n    headerTitle: prev.about.headerTitle,\n    name: prev.about.name,\n    photo: {\n    me: prev.about.photo.me,\n    width: prev.about.photo.width\n    },\n    description: prev.about.description\n    },\n    education: {\n    headerTitle: prev.education.headerTitle,\n    description: prev.education.description\n    },\n    hobbies: {\n    headerTitle: prev.hobbies.headerTitle,\n    description: prev.hobbies.description\n    },\n    goals: {\n    headerTitle: prev.goals.headerTitle,\n    description: prev.goals.description,\n    suggestedEntry: prev.goals.suggestedEntry,\n    buttonLabel: prev.goals.buttonLabel,\n    totalGoalsAdded: prev.goals.totalGoalsAdded + 1 // <-- only change here\n    }\n    }));\nlistInput.current.value = '';\nlistInput.current.focus();\n};\n\nconst handleClear = () => {\nif (items.length === 0) {\nalert(emptyListAlert);\nreturn;\n}\nsetItems([]);\nlistInput.current.value = '';\nlistInput.current.focus();\n};\n\nconst handleStartTimer = () => {\nconst duration = parseInt(timerInput.current.value);\nif (isNaN(duration) || duration <= 0) {\nalert(\"Please enter a valid time in minutes\");\nreturn;\n}\nstartTimer(duration * 60);\n};\n\nconst formatTime = (seconds) => {\nconst minutes = Math.floor(seconds / 60);\nconst remainingSeconds = seconds % 60;\nreturn `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\n\nconst toggleComplete = (index) => {\nconst newItems = [...items];\nnewItems[index].completed = !newItems[index].completed;\nsetItems(newItems);\n};\n\nreturn (\n<div>\n<h3>{listTitle}</h3>\n<input type=\"text\" ref={listInput} placeholder={placeholderText} className='inputData' />\n<button onClick={handleAdd} className='AddButton'>{buttonLabel}</button>\n<button onClick={handleClear} className='removeBotton'>{clearButtonLabel}</button>\n<p>{Listdescriptin}</p>\n\n<div className=\"timer-container\">\n<h4>Goal Timer</h4>\n<input\ntype=\"number\"\nref={timerInput}\nplaceholder=\"Enter minutes\"\nmin=\"1\"\nclassName=\"inputData\"\n/>\n<div className=\"timer-controls\">\n{!isRunning ? (\n<button onClick={handleStartTimer}>Start Timer</button>\n) : (\n<button onClick={pauseTimer}>Pause</button>\n)}\n<button onClick={resetTimer}>Reset</button>\n</div>\n<div className=\"timer-display\">\n{formatTime(time)}\n</div>\n</div>\n\n<ul ref={listRef}>\n{items.map((item, i) => (\n<li\nkey={i}\nclassName={item.completed ? 'completed' : ''}\nonClick={() => toggleComplete(i)}\n>\n{item.text}\n</li>\n))}\n</ul>\n</div>\n);\n};\n\nexport default List;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}